"""Report Histo Table

Revision ID: bcbd0955f082
Revises: 
Create Date: 2021-03-01 14:48:34.747511

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bcbd0955f082'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patient',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('patient_firstname', sa.String(length=140), nullable=True),
    sa.Column('patient_name', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_patient_name'), 'patient', ['patient_name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_name', sa.String(length=140), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.String(length=100), nullable=True),
    sa.Column('type_coloration', sa.String(length=140), nullable=True),
    sa.Column('age_at_biopsy', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(length=4096), nullable=True),
    sa.Column('diagnostic', sa.String(length=140), nullable=True),
    sa.Column('report_text', sa.Text(), nullable=True),
    sa.Column('annotation_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['expert_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_image_diagnostic'), 'image', ['diagnostic'], unique=False)
    op.create_index(op.f('ix_image_image_name'), 'image', ['image_name'], unique=False)
    op.create_table('pdf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pdf_name', sa.String(length=140), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.String(length=100), nullable=True),
    sa.Column('pdf_path', sa.String(length=4096), nullable=True),
    sa.Column('lang', sa.String(length=140), nullable=True),
    sa.Column('ocr_text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['expert_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pdf_lang'), 'pdf', ['lang'], unique=False)
    op.create_index(op.f('ix_pdf_pdf_name'), 'pdf', ['pdf_name'], unique=False)
    op.create_table('report_histo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_nom', sa.String(length=140), nullable=True),
    sa.Column('patient_prenom', sa.String(length=140), nullable=True),
    sa.Column('naissance', sa.String(length=10), nullable=True),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('biopsie_id', sa.String(length=140), nullable=True),
    sa.Column('muscle_prelev', sa.String(length=140), nullable=True),
    sa.Column('age_biopsie', sa.Integer(), nullable=True),
    sa.Column('date_envoie', sa.String(length=10), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('conclusion', sa.String(length=140), nullable=True),
    sa.Column('HE&TG_Fibre_Type_1_Hypertrophiques_(grandes)', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Fibre_Type_1_Atrophiées_(petites)', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Fibre_Type_1_Taille_hétérogène', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Fibre_Type_2_Hypertrophiques_(grandes)', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Fibre_Type_2_Atrophiées_(petites)', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Fibre_Type_2_Taille_hétérogène', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Taille_Fibre_Très_inégales', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Taille_Fibre_Discrètement_inégales', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Taille_Fibre_Sans_topographie', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Taille_Fibre_Homogène', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Apsect_Fibre_Vacuolisée_bordées', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Apsect_Fibre_Lobulées', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Apsect_Fibre_Anguleuse', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Apsect_Fibre_Bord_arrondis', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Apsect_Fibre_Segmentation_de_fibre', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Aspect_Fibre_(suite)_En_rayon_de_roue', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Aspect_Fibre_(suite)_Tourbillon', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Aspect_Fibre_(suite)_Red-ragged_fibers', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Aspect_Fibre_(suite)_Fibre__annulaires', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Noyaux_Centralisés', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Noyaux_Internalisés', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Noyaux_Sous-sarcolemmale', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Noyaux_Augmentation_du_nombre', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Noyaux_Aspects_myotubulaires', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Inclusions_protéique_Centralisés', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Inclusions_protéique_Périphériques', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_Amas/Aggrégat_sombre', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_Granuleux', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_Radiant', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_Diffus', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_Centralisés', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_Périphériques', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_(suite)_Sous_sarcolemmale', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_(suite)_Aspect_violine_(contour_imprécis)', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_(suite)_Bords_réguliers', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_(suite)_Bords_irréguliers', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Matériel_Fuscinophile_(suite)_Arrondis', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Zone_Claires_En_croissant_périphérique', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Zone_Claires_Centrale', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Zone_Claires_Majorité_de_la_fibre', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Batonnet_(rod)_ou_nemaline_bodies_Présent', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Batonnet_(rod)_ou_nemaline_bodies_Mini-rod', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Batonnet_(rod)_ou_nemaline_bodies_Piqueté_rouge_(rod-like)', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Batonnet_(rod)_ou_nemaline_bodies_Inclusion_poussière_rouge', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Aggrégat_tubulaire_Présent', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Fuseau_Neuromusculaire_Anormal', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Tissus_Conjonctif_Fibreux', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Tissus_Conjonctif_Lipomateux', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Altération/lésion_interstitielle_Oui', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Altération/lésion_interstitielle_Augmentation_Tissue_conjonctif', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Altération/lésion_interstitielle_Augmentation_Tissue_adipeux', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Altération/lésion_interstitielle_Entoure_complètement_les_fibres', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Altération/lésion_interstitielle_Bande_épaisse_entre_fasciule', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Element_inflamatoire_Présent', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Collagène_Endosymial_Augmentation_nette', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Collagène_Endosymial_Augmentation_discrète', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Necklace_Fibers_Présent', sa.Boolean(), nullable=True),
    sa.Column("HE&TG_Coup_d'ongle_périphérique_Présent", sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Nécrose_Oui', sa.Boolean(), nullable=True),
    sa.Column('HE&TG_Régénération_Oui', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Différentiation_des_fibres_Normale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Différentiation_des_fibres_Coloration_pale_fibre_atrophique', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Différentiation_des_fibres_Zone_sans_activité_ATPase', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Différentiation_des_fibres_Uniformité_de_Type', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_numérique_des_fibres_Uniformité_Type_1', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_numérique_des_fibres_Uniformité_Type_2', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_numérique_des_fibres_Prédom._Nette_Type_1', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_numérique_des_fibres_Prédom._Nette_Type_2', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_numérique_des_fibres_Prédom_Modérée_Type_1', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_numérique_des_fibres_Prédom_Modérée_Type_2', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_topographiques_des_types_de_fibres:_Regroupement_nette_des_fibres', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_topographiques_des_types_de_fibres:_Fibre_1_groupée', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_topographiques_des_types_de_fibres:_Fibre_2_groupée', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Répartition_topographiques_des_types_de_fibres:_Pas_de_regroupement', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Activité_Acide_résistant_(Type_1)', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Activité_Présence_zone_claire', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Activité_Centrale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Activité_Périphérique', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Activité_En_plage_étendue', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_ATP_Activité_En_halo', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_Myotubulaire', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_Cerné', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_Lobulation', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_Multi-lobulé', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_(suite)_Alvéole_core-like', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_(suite)_En_rayon_de_roue', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Aspect_Fibre_(suite)_Aspect_targétoide', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Remaniement_Structurels_Forte_désorganisation', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Remaniement_Structurels_Lésion_sous-sarcolemmale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Remaniement_Structurels_Réseau_intermyofribrillaire_irrégulier', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Remaniement_Structurels_Rimmed_sarcolemma', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_Disproportion_importante', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_Zone_claires_(pâle)', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_Centrale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_Périphérique', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_En_croissant', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_Limites_net', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_(suite)_Limites_floues', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_(suite)_Coloration_foncé_sous-sarcolemmale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_(suite)_Accumulation_mitochondrie_périphérique', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_(suite)_Liseret_périphérique_foncé', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Répartition_activité_(suite)_Zone_inclusions_non_colorée', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_Présent', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_Périphérique', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_Centraux_unique', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_Limites_net', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_(suite)_Limites_floues', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_(suite)_Sur_toute_la_section', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_Core_(suite)_Minicores', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_NADH_Fibre_atrophique_foncée', sa.Boolean(), nullable=True),
    sa.Column('Enzymo:_oxydatif_NADH_Fibre_atrophique:_Halo_foncé_sous_sarcolemmale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_COX_Normale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_COX_Absence_activité', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_COX_Absence_activité_locale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_COX_Faiblement_positif_(pâle)', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_COX_Faiblement_positif_localement', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_Phospholypases_Normale', sa.Boolean(), nullable=True),
    sa.Column("Enzymo_Activité_Phospholypases_Absence_d'acitivité", sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_Phospholypases_Absence_activité_locale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_Phospholypases_Faiblement_positif_de_façon_diffuse', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Activité_Phospholypases_Faiblement_positif_localement', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_Pas_de_surcharge_en_glycogène', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_Anomalie_locale_(surcharge)', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_Coloration_inégale', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_Teneur_élevée_diffuse', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_(suite)_Teneur_très_irrégulière', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_(suite)_Contraste_fort_type_I_et_II', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_PAS_(suite)_Accumulation_dans_fibre_anormales', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_Soudan_Pas_de_surchage_en_lipides', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_Soudan_Fibre_type_1:_surchage_en_lipide', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_Soudan_Goutelette_lipidiques', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_Soudan_Surcharge_dans_les_fibre_remaniées_/_anormales', sa.Boolean(), nullable=True),
    sa.Column('Enzymo_Coloration_Soudan_Fibre_type_II_plus_riche_que_les_fibre_type_I', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Structure_sarcomérique_Désorganisé_;_Remanié', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Structure_sarcomérique_En_croissant', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Bande_A_Absente', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Materiel_Z_Elargissement', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Materiel_Z_Streaming', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Vacuole_autophagiques_Oui', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Citerne_Dilatation', sa.Boolean(), nullable=True),
    sa.Column('Micro._Elec._Lésion_type_CAPS_Oui', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['expert_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_histo_biopsie_id'), 'report_histo', ['biopsie_id'], unique=False)
    op.create_index(op.f('ix_report_histo_conclusion'), 'report_histo', ['conclusion'], unique=False)
    op.create_index(op.f('ix_report_histo_patient_nom'), 'report_histo', ['patient_nom'], unique=False)
    op.create_index(op.f('ix_report_histo_patient_prenom'), 'report_histo', ['patient_prenom'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_report_histo_patient_prenom'), table_name='report_histo')
    op.drop_index(op.f('ix_report_histo_patient_nom'), table_name='report_histo')
    op.drop_index(op.f('ix_report_histo_conclusion'), table_name='report_histo')
    op.drop_index(op.f('ix_report_histo_biopsie_id'), table_name='report_histo')
    op.drop_table('report_histo')
    op.drop_index(op.f('ix_pdf_pdf_name'), table_name='pdf')
    op.drop_index(op.f('ix_pdf_lang'), table_name='pdf')
    op.drop_table('pdf')
    op.drop_index(op.f('ix_image_image_name'), table_name='image')
    op.drop_index(op.f('ix_image_diagnostic'), table_name='image')
    op.drop_table('image')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_patient_patient_name'), table_name='patient')
    op.drop_table('patient')
    # ### end Alembic commands ###
