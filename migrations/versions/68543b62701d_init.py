"""Init

Revision ID: 68543b62701d
Revises: 
Create Date: 2021-03-09 16:37:42.330496

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "68543b62701d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "patient",
        sa.Column("id", sa.String(length=100), nullable=False),
        sa.Column("patient_firstname", sa.String(length=140), nullable=True),
        sa.Column("patient_name", sa.String(length=140), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_patient_patient_name"), "patient", ["patient_name"], unique=False
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "image",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("image_name", sa.String(length=140), nullable=True),
        sa.Column("expert_id", sa.Integer(), nullable=True),
        sa.Column("patient_id", sa.String(length=100), nullable=True),
        sa.Column("type_coloration", sa.String(length=140), nullable=True),
        sa.Column("age_at_biopsy", sa.Integer(), nullable=True),
        sa.Column("image_path", sa.String(length=4096), nullable=True),
        sa.Column("diagnostic", sa.String(length=140), nullable=True),
        sa.Column("report_text", sa.Text(), nullable=True),
        sa.Column("annotation_json", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["expert_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_image_diagnostic"), "image", ["diagnostic"], unique=False)
    op.create_index(op.f("ix_image_image_name"), "image", ["image_name"], unique=False)
    op.create_table(
        "pdf",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pdf_name", sa.String(length=140), nullable=True),
        sa.Column("expert_id", sa.Integer(), nullable=True),
        sa.Column("patient_id", sa.String(length=100), nullable=True),
        sa.Column("pdf_path", sa.String(length=4096), nullable=True),
        sa.Column("lang", sa.String(length=140), nullable=True),
        sa.Column("ocr_text", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["expert_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pdf_lang"), "pdf", ["lang"], unique=False)
    op.create_index(op.f("ix_pdf_pdf_name"), "pdf", ["pdf_name"], unique=False)
    op.create_table(
        "report_histo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_nom", sa.String(length=140), nullable=True),
        sa.Column("patient_prenom", sa.String(length=140), nullable=True),
        sa.Column("naissance", sa.String(length=10), nullable=True),
        sa.Column("expert_id", sa.Integer(), nullable=True),
        sa.Column("biopsie_id", sa.String(length=140), nullable=True),
        sa.Column("muscle_prelev", sa.String(length=140), nullable=True),
        sa.Column("age_biopsie", sa.Integer(), nullable=True),
        sa.Column("date_envoie", sa.String(length=10), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("conclusion", sa.String(length=140), nullable=True),
        sa.Column("Type_1_Hypertrophiques_(grandes)", sa.Boolean(), nullable=True),
        sa.Column("Type_1_Atrophiées_(petites)", sa.Boolean(), nullable=True),
        sa.Column("Type__1_Taille_hétérogène", sa.Boolean(), nullable=True),
        sa.Column("Type_2_Hypertrophiques_(grandes)", sa.Boolean(), nullable=True),
        sa.Column("Type_2_Atrophiées_(petites)", sa.Boolean(), nullable=True),
        sa.Column("Type_2__Taille_hétérogène", sa.Boolean(), nullable=True),
        sa.Column("Tailles_Très_inégales", sa.Boolean(), nullable=True),
        sa.Column("Tailles_Discrètement_inégales", sa.Boolean(), nullable=True),
        sa.Column("Sans_topographie", sa.Boolean(), nullable=True),
        sa.Column("Tailles_Homogène", sa.Boolean(), nullable=True),
        sa.Column("Vacuolisée_bordées", sa.Boolean(), nullable=True),
        sa.Column("Lobulées", sa.Boolean(), nullable=True),
        sa.Column("Anguleuse", sa.Boolean(), nullable=True),
        sa.Column("Bord_arrondis", sa.Boolean(), nullable=True),
        sa.Column("Segmentation_de_fibre", sa.Boolean(), nullable=True),
        sa.Column("Aspect_En_rayon_de_roue", sa.Boolean(), nullable=True),
        sa.Column("Tourbillon", sa.Boolean(), nullable=True),
        sa.Column("Red-ragged_fibers", sa.Boolean(), nullable=True),
        sa.Column("Fibre__annulaires", sa.Boolean(), nullable=True),
        sa.Column("Noyaux_Centralisés", sa.Boolean(), nullable=True),
        sa.Column("Internalisés", sa.Boolean(), nullable=True),
        sa.Column("Sous-sarcolemmale", sa.Boolean(), nullable=True),
        sa.Column("Augmentation_du_nombre", sa.Boolean(), nullable=True),
        sa.Column("Noyaux_à_Aspects_myotubulaires", sa.Boolean(), nullable=True),
        sa.Column("Inclusion_Prot._Centralisés", sa.Boolean(), nullable=True),
        sa.Column("Inclusions_Périphériques", sa.Boolean(), nullable=True),
        sa.Column("Amas/Aggrégat_sombre", sa.Boolean(), nullable=True),
        sa.Column("Granuleux", sa.Boolean(), nullable=True),
        sa.Column("Radiant", sa.Boolean(), nullable=True),
        sa.Column("Diffus", sa.Boolean(), nullable=True),
        sa.Column("Matériel_Fuscinophile_Centralisés", sa.Boolean(), nullable=True),
        sa.Column("Matériel_Fuscinophile_Périphériques", sa.Boolean(), nullable=True),
        sa.Column("Sous_sarcolemmale", sa.Boolean(), nullable=True),
        sa.Column("Aspect_violine_(contour_imprécis)", sa.Boolean(), nullable=True),
        sa.Column("Bords_réguliers", sa.Boolean(), nullable=True),
        sa.Column("Bords_irréguliers", sa.Boolean(), nullable=True),
        sa.Column("Arrondis", sa.Boolean(), nullable=True),
        sa.Column("zone_clair_En_croissant_périphérique", sa.Boolean(), nullable=True),
        sa.Column("Zone_claire_Centrale", sa.Boolean(), nullable=True),
        sa.Column("Majorité_de_la_fibre", sa.Boolean(), nullable=True),
        sa.Column("Rods_Présent", sa.Boolean(), nullable=True),
        sa.Column("Mini-rod", sa.Boolean(), nullable=True),
        sa.Column("Piqueté_rouge_(rod-like)", sa.Boolean(), nullable=True),
        sa.Column("Inclusion_poussière_rouge", sa.Boolean(), nullable=True),
        sa.Column("Aggrégat_Tubulaires_Présent", sa.Boolean(), nullable=True),
        sa.Column("Fuseau_Neuro_Anormal", sa.Boolean(), nullable=True),
        sa.Column("Fibreux", sa.Boolean(), nullable=True),
        sa.Column("Lipomateux", sa.Boolean(), nullable=True),
        sa.Column("Altération_interstitielle", sa.Boolean(), nullable=True),
        sa.Column("Augmentation_Tissue_conjonctif", sa.Boolean(), nullable=True),
        sa.Column("Augmentation_Tissue_adipeux", sa.Boolean(), nullable=True),
        sa.Column("Entoure_complètement_les_fibres", sa.Boolean(), nullable=True),
        sa.Column("Bande_épaisse_entre_fasciule", sa.Boolean(), nullable=True),
        sa.Column("Inflamation", sa.Boolean(), nullable=True),
        sa.Column("Augmentation_nette_du_collagène_endo.", sa.Boolean(), nullable=True),
        sa.Column(
            "Augmentation_discrète_du_collagène_endo.", sa.Boolean(), nullable=True
        ),
        sa.Column("Necklace_Fibers_Présent", sa.Boolean(), nullable=True),
        sa.Column("Coup_d'ongle_Présent", sa.Boolean(), nullable=True),
        sa.Column("Nécrose", sa.Boolean(), nullable=True),
        sa.Column("Régénération", sa.Boolean(), nullable=True),
        sa.Column("Différenciation_Normale", sa.Boolean(), nullable=True),
        sa.Column("Coloration_pale_fibre_atrophique", sa.Boolean(), nullable=True),
        sa.Column("Zone_sans_activité_ATPase", sa.Boolean(), nullable=True),
        sa.Column("Uniformité_de_Type", sa.Boolean(), nullable=True),
        sa.Column("Uniformité_Type_1", sa.Boolean(), nullable=True),
        sa.Column("Uniformité_Type_2", sa.Boolean(), nullable=True),
        sa.Column("Prédom._Nette_Type_1", sa.Boolean(), nullable=True),
        sa.Column("Prédom._Nette_Type_2", sa.Boolean(), nullable=True),
        sa.Column("Prédom_Modérée_Type_1", sa.Boolean(), nullable=True),
        sa.Column("Prédom_Modérée_Type_2", sa.Boolean(), nullable=True),
        sa.Column("Regroupement_nette_des_fibres", sa.Boolean(), nullable=True),
        sa.Column("Fibre_1_groupée", sa.Boolean(), nullable=True),
        sa.Column("Fibre_2_groupée", sa.Boolean(), nullable=True),
        sa.Column("Pas_de_regroupement", sa.Boolean(), nullable=True),
        sa.Column("Acide_résistant_(Type_1)", sa.Boolean(), nullable=True),
        sa.Column("Présence_zone_claire", sa.Boolean(), nullable=True),
        sa.Column("Activité_ATP_Centrale", sa.Boolean(), nullable=True),
        sa.Column("Activité_ATP_Périphérique", sa.Boolean(), nullable=True),
        sa.Column("En_plage_étendue", sa.Boolean(), nullable=True),
        sa.Column("En_halo", sa.Boolean(), nullable=True),
        sa.Column("Aspect_oxydo_Myotubulaire", sa.Boolean(), nullable=True),
        sa.Column("Cerné", sa.Boolean(), nullable=True),
        sa.Column("Lobulation", sa.Boolean(), nullable=True),
        sa.Column("Multi-lobulé", sa.Boolean(), nullable=True),
        sa.Column("Alvéole_core-like", sa.Boolean(), nullable=True),
        sa.Column("Oxydation_En_rayon_de_roue", sa.Boolean(), nullable=True),
        sa.Column("Aspect_targétoide", sa.Boolean(), nullable=True),
        sa.Column("Forte_désorganisation", sa.Boolean(), nullable=True),
        sa.Column("Lésion_sous-sarcolemmale", sa.Boolean(), nullable=True),
        sa.Column(
            "Réseau_intermyofribrillaire_irrégulier", sa.Boolean(), nullable=True
        ),
        sa.Column("Rimmed_sarcolemma", sa.Boolean(), nullable=True),
        sa.Column("Disproportion_importante", sa.Boolean(), nullable=True),
        sa.Column("Zone_claires_(pâle)", sa.Boolean(), nullable=True),
        sa.Column("Activité_Oxy._Centrale", sa.Boolean(), nullable=True),
        sa.Column("Activité_Oxyda_Périphérique", sa.Boolean(), nullable=True),
        sa.Column("activité_En_croissant", sa.Boolean(), nullable=True),
        sa.Column("Coloration_foncé_sous-sarcolemmale", sa.Boolean(), nullable=True),
        sa.Column(
            "Accumulation_mitochondrie_périphérique", sa.Boolean(), nullable=True
        ),
        sa.Column("Liseret_périphérique_foncé", sa.Boolean(), nullable=True),
        sa.Column("Zone_inclusions_non_colorée", sa.Boolean(), nullable=True),
        sa.Column("Core_Présent", sa.Boolean(), nullable=True),
        sa.Column("Core_Périphérique", sa.Boolean(), nullable=True),
        sa.Column("Centraux_unique", sa.Boolean(), nullable=True),
        sa.Column("Limites_net", sa.Boolean(), nullable=True),
        sa.Column("Limites_floues", sa.Boolean(), nullable=True),
        sa.Column("Sur_toute_la_section", sa.Boolean(), nullable=True),
        sa.Column("Minicores", sa.Boolean(), nullable=True),
        sa.Column("Fibre_atrophique_foncée", sa.Boolean(), nullable=True),
        sa.Column(
            "Fibre_atrophique:_Halo_foncé_sous_sarcolemmale",
            sa.Boolean(),
            nullable=True,
        ),
        sa.Column("Activité_COX_Normale", sa.Boolean(), nullable=True),
        sa.Column("Absence_d'acitivité_COX", sa.Boolean(), nullable=True),
        sa.Column("Absence_d'acitivité_COX_locale", sa.Boolean(), nullable=True),
        sa.Column("COX_Faiblement_positif_(pâle)", sa.Boolean(), nullable=True),
        sa.Column("COX_Faiblement_positif_localement", sa.Boolean(), nullable=True),
        sa.Column("Activité_Phospho._Normale", sa.Boolean(), nullable=True),
        sa.Column("Absence_d'acitivité_phospho", sa.Boolean(), nullable=True),
        sa.Column("Absence_d'acitivité_phospho_locale", sa.Boolean(), nullable=True),
        sa.Column(
            "Phospho_Faiblement_positif_de_façon_diffuse", sa.Boolean(), nullable=True
        ),
        sa.Column("Phospho_Faiblement_positif_localement", sa.Boolean(), nullable=True),
        sa.Column("Pas_de_surcharge_en_glycogène", sa.Boolean(), nullable=True),
        sa.Column("PAS:_Anomalie_locale_(surcharge)", sa.Boolean(), nullable=True),
        sa.Column("Coloration_inégale", sa.Boolean(), nullable=True),
        sa.Column("Teneur_élevée_diffuse", sa.Boolean(), nullable=True),
        sa.Column("Teneur_très_irrégulière", sa.Boolean(), nullable=True),
        sa.Column("Contraste_fort_type_I_et_II", sa.Boolean(), nullable=True),
        sa.Column("Accumulation_dans_fibre_anormales", sa.Boolean(), nullable=True),
        sa.Column("Pas_de_surchage_en_lipides", sa.Boolean(), nullable=True),
        sa.Column("Fibre_type_1:_surchage_en_lipide", sa.Boolean(), nullable=True),
        sa.Column("Goutelette_lipidiques", sa.Boolean(), nullable=True),
        sa.Column(
            "Surcharge_dans_les_fibre_remaniées_/_anormales",
            sa.Boolean(),
            nullable=True,
        ),
        sa.Column(
            "Fibre_type_II_plus_riche_que_les_fibre_type_I", sa.Boolean(), nullable=True
        ),
        sa.Column("Désorganisé_;_Remanié", sa.Boolean(), nullable=True),
        sa.Column("Structure_sarcomérique_en_croissant", sa.Boolean(), nullable=True),
        sa.Column("Bande_A_Absente", sa.Boolean(), nullable=True),
        sa.Column("Elargissement", sa.Boolean(), nullable=True),
        sa.Column("Streaming", sa.Boolean(), nullable=True),
        sa.Column("Vacuole_présente", sa.Boolean(), nullable=True),
        sa.Column("Dilatation", sa.Boolean(), nullable=True),
        sa.Column("Lésion_CAPS_Présentes", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["expert_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_report_histo_biopsie_id"), "report_histo", ["biopsie_id"], unique=False
    )
    op.create_index(
        op.f("ix_report_histo_conclusion"), "report_histo", ["conclusion"], unique=False
    )
    op.create_index(
        op.f("ix_report_histo_patient_nom"),
        "report_histo",
        ["patient_nom"],
        unique=False,
    )
    op.create_index(
        op.f("ix_report_histo_patient_prenom"),
        "report_histo",
        ["patient_prenom"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_report_histo_patient_prenom"), table_name="report_histo")
    op.drop_index(op.f("ix_report_histo_patient_nom"), table_name="report_histo")
    op.drop_index(op.f("ix_report_histo_conclusion"), table_name="report_histo")
    op.drop_index(op.f("ix_report_histo_biopsie_id"), table_name="report_histo")
    op.drop_table("report_histo")
    op.drop_index(op.f("ix_pdf_pdf_name"), table_name="pdf")
    op.drop_index(op.f("ix_pdf_lang"), table_name="pdf")
    op.drop_table("pdf")
    op.drop_index(op.f("ix_image_image_name"), table_name="image")
    op.drop_index(op.f("ix_image_diagnostic"), table_name="image")
    op.drop_table("image")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_patient_patient_name"), table_name="patient")
    op.drop_table("patient")
    # ### end Alembic commands ###
